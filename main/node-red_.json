[
    {
        "id": "eb1389238c0e7990",
        "type": "tab",
        "label": "Flux 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da4be93616795b2c",
        "type": "mqtt in",
        "z": "eb1389238c0e7990",
        "name": "Char_brut",
        "topic": "esp32/projet_qualitee_air",
        "qos": "2",
        "datatype": "utf8",
        "broker": "07a0d543df56230a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "3f1312ae74ace06f",
                "function_node",
                "6ec6750ef5df4f8e"
            ]
        ]
    },
    {
        "id": "3f1312ae74ace06f",
        "type": "function",
        "z": "eb1389238c0e7990",
        "name": "functionSplitString",
        "func": "function splitString(input) {\n// Définir les identifiants correspondants\nconst identifiers = ['temperature', 'pression', 'altitude', 'humidite', 'CO2', 'TVOC'];\n// Diviser la chaîne en fonction du délimiteur \"-\"\nconst splitValues = input.split('-').filter(element => element !== '');\n\n// Créer un objet pour stocker les valeurs associées à leurs identifiants\nconst result = {};\n\n// Associer chaque valeur à son identifiant correspondant\nidentifiers.forEach((identifier, index) => {\n    result[identifier] = splitValues[index];\n});\n\nreturn result;\n}\n\n// Obtenez le payload du message MQTT\nlet inputString = msg.payload;\n\n// Vérifiez que le payload est une chaîne de caractères\nif (typeof inputString === 'string') {\n    // Appelez la fonction pour diviser la chaîne\n    msg.payload = splitString(inputString);\n} else {\n    // Si ce n'est pas une chaîne, renvoyez une erreur\n    msg.payload = 'Invalid input';\n}\n\n// Définir des variables pour chaque mesure\nconst temperature = parseInt(msg.payload['temperature']);\nconst pression = parseFloat(msg.payload['pression']);\nconst altitude = parseFloat(msg.payload['altitude']);\nconst humidite = parseFloat(msg.payload['humidite']);\nconst co2 = parseFloat(msg.payload['CO2']);\nconst tvoc = parseFloat(msg.payload['TVOC']);\n\n// Préparer la requête SQL en utilisant les variables ['Id', 'température', 'pression', 'altitude', 'humidité', 'CO2', 'TVOC'];\nmsg.topic ='INSERT INTO mesures (temperature,pression,altitude,humidite,co2,tvoc) VALUES (' + temperature + ',' + pression + ',' + altitude + ',' + humidite + ',' + co2 + ',' + tvoc + ');'\n//msg.topic = 'INSERT INTO mesures (temperature,pression,altitude,humidite,co2,tvoc) VALUES (' + msg.payload['température'] + ',' + msg.payload['pression'] + ',' + msg.payload['altitude'] + ',' + msg.payload['humidité'] + ',' + msg.payload['CO2'] + ');'; //ajouter msg.payload['tvoc']\n\n// Renvoyez le message avec le nouveau payload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "d0f505cbf934465c",
                "c9595c7ba0f44026",
                "76513ce60a439053",
                "e7f2e6a8c74099fb",
                "d4c08cdf4102b58e",
                "130287709701b60d",
                "2f85d66aabd1871e",
                "da4022ba545f8547"
            ]
        ]
    },
    {
        "id": "d0f505cbf934465c",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "temperature",
        "format": "{{msg.payload['temperature']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 20,
        "wires": []
    },
    {
        "id": "c9595c7ba0f44026",
        "type": "Stackhero-MySQL",
        "z": "eb1389238c0e7990",
        "server": "8f20765007329c42",
        "name": "mesures_air",
        "x": 570,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "76513ce60a439053",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "pression",
        "format": "{{msg.payload['pression']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 720,
        "y": 20,
        "wires": []
    },
    {
        "id": "e7f2e6a8c74099fb",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "altitude",
        "format": "{{msg.payload['altitude']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "d4c08cdf4102b58e",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "humidite",
        "format": "{{msg.payload['humidite']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 720,
        "y": 60,
        "wires": []
    },
    {
        "id": "130287709701b60d",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "co2",
        "format": "{{msg.payload['CO2']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f85d66aabd1871e",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "89f674bbf742dac8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "tvoc",
        "format": "{{msg.payload['TVOC']}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 100,
        "wires": []
    },
    {
        "id": "d2a1e0b40c855b4d",
        "type": "inject",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM date_mesure",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "23d46e14e8236f49"
            ]
        ]
    },
    {
        "id": "03d70a62477826ae",
        "type": "debug",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 780,
        "wires": []
    },
    {
        "id": "23d46e14e8236f49",
        "type": "Stackhero-MySQL",
        "z": "eb1389238c0e7990",
        "d": true,
        "server": "8f20765007329c42",
        "name": "dates",
        "x": 250,
        "y": 800,
        "wires": [
            [
                "03d70a62477826ae",
                "203fd12188db463a"
            ]
        ]
    },
    {
        "id": "203fd12188db463a",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "d": true,
        "group": "89f674bbf742dac8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "date : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 840,
        "wires": []
    },
    {
        "id": "deaa75b7cd53cafc",
        "type": "function",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "eee47f1d06a2d4e5",
        "type": "ui_slider",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "",
        "label": "laps_de_temps",
        "tooltip": "",
        "group": "89f674bbf742dac8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 140,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "function_node",
        "type": "function",
        "z": "eb1389238c0e7990",
        "name": "Extract Date",
        "func": "let payload = JSON.parse(msg.payload);\nmsg.date = payload.date;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "debug_node",
                "162c64bb12b70ee3"
            ]
        ]
    },
    {
        "id": "debug_node",
        "type": "debug",
        "z": "eb1389238c0e7990",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "date",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 260,
        "wires": []
    },
    {
        "id": "162c64bb12b70ee3",
        "type": "ui_slider",
        "z": "eb1389238c0e7990",
        "name": "",
        "label": "Interval (minutes)",
        "tooltip": "",
        "group": "2eb0a612633579e1",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "7892315d5444f4c8"
            ]
        ]
    },
    {
        "id": "de52e681c124b7bd",
        "type": "mqtt out",
        "z": "eb1389238c0e7990",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker_id",
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "7892315d5444f4c8",
        "type": "ui_text",
        "z": "eb1389238c0e7990",
        "group": "2eb0a612633579e1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current Date and Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "6ec6750ef5df4f8e",
        "type": "debug",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 40,
        "wires": []
    },
    {
        "id": "da4022ba545f8547",
        "type": "debug",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "6c2b807ee1b73d58",
        "type": "ui_button",
        "z": "eb1389238c0e7990",
        "d": true,
        "name": "",
        "group": "54a72964173d40f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Test Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "add_box",
        "payload": "Button Pressed",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 560,
        "wires": [
            [
                "22aba29242f1c0e3"
            ]
        ]
    },
    {
        "id": "22aba29242f1c0e3",
        "type": "debug",
        "z": "eb1389238c0e7990",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "a48d6868f81357e2",
        "type": "ui_button",
        "z": "eb1389238c0e7990",
        "name": "",
        "group": "c7b06a58eeee2ffd",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Enable Button",
        "tooltip": "",
        "color": "green",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 540,
        "wires": [
            [
                "b6cb43dafd66f920"
            ]
        ]
    },
    {
        "id": "bb6f9485d602bee1",
        "type": "ui_button",
        "z": "eb1389238c0e7990",
        "name": "",
        "group": "c7b06a58eeee2ffd",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Disable Button",
        "tooltip": "",
        "color": "red",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 580,
        "wires": [
            [
                "b6cb43dafd66f920"
            ]
        ]
    },
    {
        "id": "b6cb43dafd66f920",
        "type": "change",
        "z": "eb1389238c0e7990",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "6c2b807ee1b73d58",
                "de52e681c124b7bd"
            ]
        ]
    },
    {
        "id": "bb2b8389cb5cbb17",
        "type": "ui_spacer",
        "z": "eb1389238c0e7990",
        "name": "spacer",
        "group": "54a72964173d40f8",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "a205ac5bb3e4ac36",
        "type": "ui_spacer",
        "z": "eb1389238c0e7990",
        "name": "spacer",
        "group": "c7b06a58eeee2ffd",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "07a0d543df56230a",
        "type": "mqtt-broker",
        "name": "UTBM",
        "broker": "mqtt.ci-ciad.utbm.fr",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "89f674bbf742dac8",
        "type": "ui_group",
        "name": "LED APPLICATION",
        "tab": "59516f801a169b34",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f20765007329c42",
        "type": "Stackhero-MySQL-Server",
        "name": "mesures_air",
        "host": "127.0.0.1",
        "port": "3306",
        "tls": false,
        "database": "mesures_air"
    },
    {
        "id": "2eb0a612633579e1",
        "type": "ui_group",
        "name": "Date Display Control",
        "tab": "821352b5ef968aca",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "mqtt_broker_id",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "your_MQTT_broker",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "54a72964173d40f8",
        "type": "ui_group",
        "name": "Function",
        "tab": "1e46d499680fa5fb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c7b06a58eeee2ffd",
        "type": "ui_group",
        "name": "Settings",
        "tab": "1e46d499680fa5fb",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "59516f801a169b34",
        "type": "ui_tab",
        "name": "données générales",
        "icon": "folder",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "821352b5ef968aca",
        "type": "ui_tab",
        "name": "live",
        "icon": "folder_open",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e46d499680fa5fb",
        "type": "ui_tab",
        "name": "Button",
        "icon": "touch_app",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]